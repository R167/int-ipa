{"version":3,"sources":["../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/icons/Error.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","components/Tools/Validator.tsx","components/Tools/ToolList.tsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","createSvgIcon","React","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","className","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","computeHashes","async","hashes","salt","values","split","el","Promise","all","checkHash","hash","useStyles","makeStyles","marginTop","correct","success","main","table","marginBottom","noAutoComplete","spellCheck","autoCorrect","autoComplete","FORMATTER","Intl","DateTimeFormat","month","day","hour","minute","Validator","names","setNames","useState","setSalt","setDisplay","useAsync","handleText","useCallback","target","hashList","result","message","date","TableRow","TableCell","format","Tooltip","title","Grid","container","item","md","sm","xs","TextField","label","variant","multiline","fullWidth","inputProps","onChange","lg","e","Button","TableContainer","Paper","Table","TableHead","TableBody","links","path","Home","match","Link","to","url","ToolList","urls","useLocation","pathname","val","i","join","aria-label","replace","c","toUpperCase","exact","render","NotFound"],"mappings":"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","file":"static/js/3.23ad0293.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React, { useCallback, useState } from \"react\";\n\nimport { checkHash } from \"../../utils/validation\";\nimport { useAsync } from \"react-async-hook\";\nimport {\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport CorrectIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst computeHashes = async (hashes: string, salt: string) => {\n  if (hashes) {\n    const values = hashes.split(/[\\s,]+/m).filter((el) => el.length > 0);\n    return Promise.all(\n      values.map(async (hash) => {\n        return { ...(await checkHash(hash, salt)), hash };\n      })\n    );\n  } else {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: `${theme.spacing(1)}px`,\n  },\n  correct: {\n    color: theme.palette.success.main,\n  },\n  table: {\n    marginBottom: `${theme.spacing(2)}px`,\n  },\n}));\n\nconst noAutoComplete = {\n  spellCheck: \"false\",\n  autoCorrect: \"off\",\n  autoComplete: \"off\",\n} as const;\n\nconst FORMATTER = new Intl.DateTimeFormat(\"en-US\", {\n  month: \"short\",\n  day: \"numeric\",\n  hour: \"numeric\",\n  minute: \"2-digit\",\n});\n\nconst Validator = () => {\n  const classes = useStyles();\n  const [names, setNames] = useState(\"\");\n  const [salt, setSalt] = useState(\"\");\n  const [display, setDisplay] = useState({ names, salt });\n  const hashes = useAsync(computeHashes, [display.names, display.salt]);\n\n  const handleText = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => setNames(event.target.value),\n    []\n  );\n\n  const hashList = hashes.result?.map(({ hash, message, name, date, correct }) => (\n    <TableRow key={hash}>\n      <TableCell>{name}</TableCell>\n      <TableCell>{FORMATTER.format(date)}</TableCell>\n      <TableCell>\n        <Tooltip title={message}>\n          {correct ? <CorrectIcon className={classes.correct} /> : <ErrorIcon color=\"error\" />}\n        </Tooltip>\n      </TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <Grid container spacing={2} className={classes.root}>\n      <Grid item md={6} sm={12}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12}>\n            <TextField\n              label=\"Validation Names\"\n              variant=\"filled\"\n              multiline\n              fullWidth\n              inputProps={noAutoComplete}\n              value={names}\n              onChange={handleText}\n            />\n          </Grid>\n          <Grid item lg={8} md={6} xs>\n            <TextField\n              label=\"Salt (optional)\"\n              variant=\"filled\"\n              fullWidth\n              inputProps={noAutoComplete}\n              value={salt}\n              onChange={(e) => setSalt(e.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setDisplay({ names, salt })}>\n              Check\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs>\n        <TableContainer component={Paper} className={classes.table}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Submit Time</TableCell>\n                <TableCell>Valid</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{hashList}</TableBody>\n          </Table>\n        </TableContainer>\n        <Typography variant=\"body1\">\n          Enter a list of submission codes and the salt used for the assignment. If you didn't set a\n          salt, leave this blank.\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Validator;\n","import React from \"react\";\n\nimport { Breadcrumbs, Link as MatLink } from \"@material-ui/core\";\n\nimport { Link, Route, Switch, match, useLocation } from \"react-router-dom\";\nimport NotFound from \"../NotFound\";\nimport Validator from \"./Validator\";\n\nconst links = [\n  { path: \"test\", name: \"Test\" },\n  { path: \"validate\", name: \"Validate\" },\n];\n\nconst Home = ({ match }: Props) => {\n  return (\n    <ul>\n      {links.map(({ path, name }) => (\n        <li>\n          <MatLink component={Link} to={`${match.url}/${path}`} key={path}>\n            {name}\n          </MatLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\ninterface Props {\n  match: match;\n}\n\nconst ToolList = ({ match }: Props) => {\n  const location = useLocation();\n\n  const urls = location.pathname\n    .split(\"/\")\n    .map((val, i, path) => {\n      return { path: path.slice(0, i + 1).join(\"/\"), name: val };\n    })\n    .filter((el) => el.name.length !== 0);\n\n  return (\n    <div>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        {urls.map(({ path, name }, i) => (\n          <MatLink\n            key={path}\n            component={Link}\n            color={i === urls.length - 1 ? \"textPrimary\" : \"inherit\"}\n            to={path}\n          >\n            {name.replace(/\\b\\w/g, (c) => c.toUpperCase())}\n          </MatLink>\n        ))}\n      </Breadcrumbs>\n      <Switch>\n        <Route exact path={match.url} component={Home} />\n        <Route path={`${match.url}/test`} render={() => \"Test!\"} />\n        <Route path={`${match.url}/validate`} component={Validator} />\n\n        {/* Catchall */}\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default ToolList;\n"],"sourceRoot":""}