{"version":3,"sources":["constants.ts","Manifest.tsx","components/TaskList.tsx","components/ClassPage.tsx","components/Homepage.tsx","components/keyboard/common.ts","utils/ipa.ts","components/keyboard/Pulmonics.tsx","components/keyboard/NonPulmonics.tsx","components/keyboard/Keyboard.tsx","components/TypeIPA.tsx","Router.tsx","utils/styles.ts","components/Header.tsx","App.tsx","index.tsx"],"names":["MANIFEST_FILE","process","ManifestContext","React","createContext","fetchManifest","a","fetch","req","text","body","YAML","parse","prettyErrors","useManifest","asyncManifest","useContext","Error","errorShown","Manifest","children","manifest","useAsync","error","console","log","message","name","match","alert","Provider","value","taskLink","path","file","replace","TaskList","props","tasks","length","Typography","Grid","container","spacing","map","task","i","hidden","item","lg","xs","Box","component","Paper","p","height","display","alignContent","alignItems","flexWrap","color","gutterBottom","variant","description","justifyContent","width","Button","Link","to","fetchClassTasks","classId","folder","url","Status","msg","align","ClassPage","params","klass","result","classes","find","classTasks","title","location","pathname","loading","Homepage","paddingY","RLink","borderColor","theme","palette","type","lighten","fade","divider","darken","PLACES","MANNERS","IMPOSSIBLE","NUL","PULMONICS","CLICKS","Map","IMPLOSIVES","EJECTIVES","useStyles","makeStyles","voiceless","cursor","float","backgroundColor","action","hover","voiced","impossible","disabledBackground","symbol","userSelect","fontSize","sideBorder","borderLeft","borderRight","caps","textTransform","padding","header","Pulmonics","onClick","clickCallback","useCallback","char","undefined","Cell","x","y","hasBorders","TableCell","className","clsx","TableContainer","Table","size","aria-label","TableHead","TableRow","place","TableBody","manner","descr","paddingLeft","verticalAlign","NonPulmonics","sounds","useMemo","clicks","Array","from","entries","implosives","ejectives","click","row","j","Keyboard","md","reducer","state","ref","current","selectionStart","slice","TypeIPA","inputRef","useRef","useReducer","dispatch","keyboardClick","setValue","e","target","deleteClick","useEffect","setSelectionRange","justify","TextField","id","multiline","fullWidth","rowsMax","onChange","inputProps","spellCheck","label","IconButton","Router","exact","notchGutters","paddingRight","breakpoints","up","itemGutters","gutters","Loading","ListItem","ListItemText","primary","LinearProgress","ListLink","useLocation","icon","selected","matchPath","button","ListItemIcon","DarkSwitch","withStyles","switchBase","grey","checked","track","Switch","Header","useState","drawer","setDrawer","changeDarkMode","openDrawer","closeDrawer","toggleDarkMode","event","list","List","Divider","ListSubheader","Drawer","anchor","open","onClose","overflow","role","mb","darkMode","AppBar","position","Toolbar","edge","lightTheme","createMuiTheme","secondary","main","blue","indigo","darkTheme","containerRoot","boxSizing","margin","DARK_KEY","App","prefersDarkMode","useMediaQuery","window","localStorage","getItem","dark","setDark","setItem","toString","ThemeProvider","CssBaseline","Container","maxWidth","root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8172d5a.chunk.js","sourcesContent":["// A list of constants for the project\n\n// PUBLIC_URL access\nexport const BASE_URL = process.env.PUBLIC_URL;\n\n// URL of teh manifest file\nexport const MANIFEST_FILE = `${BASE_URL}/manifest.yaml`;\n\n// Name of the task file\nexport const TASK_FILE = \"tasks.yaml\";\n\n// Generate a full file URL given the folder and the pathname\nexport const fileUrl = (folder: string, path: string) => `${BASE_URL}/${folder}/${path}`;\n","import React, { useContext } from \"react\";\nimport { UseAsyncReturn, useAsync } from \"react-async-hook\";\nimport YAML from \"yaml\";\nimport { MANIFEST_FILE } from \"./constants\";\n\nimport { ManifestType } from \"./utils/parsers\";\n\nconst ManifestContext = React.createContext<UseAsyncReturn<ManifestType, never[]> | null>(null);\n\nconst fetchManifest = async (): Promise<ManifestType> => {\n  const req = await fetch(MANIFEST_FILE);\n  const body = await req.text();\n  return YAML.parse(body, { prettyErrors: true });\n};\n\nexport const useManifest = () => {\n  const asyncManifest = useContext(ManifestContext);\n  if (!asyncManifest) {\n    // Absurd\n    throw new Error(\"Error: you must create an initial manifest object\");\n  }\n  return asyncManifest;\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\n// Only show the error once\nlet errorShown = false;\n\nconst Manifest = ({ children }: Props) => {\n  const manifest = useAsync(fetchManifest, []);\n  if (manifest.error && !errorShown) {\n    errorShown = true;\n    console.log(manifest.error.message);\n    console.log(manifest.error);\n    if (manifest.error.name.match(/^YAML/)) {\n      // This is a YAML error\n      alert(\n        `Error: Your manifest.yaml contains invalid syntax. Please check the console for more info.`\n      );\n    } else {\n      alert(\"There was an error loading your manifest.yaml\");\n    }\n  }\n  return <ManifestContext.Provider value={manifest}>{children}</ManifestContext.Provider>;\n};\n\nexport default Manifest;\n","import React from \"react\";\n\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\ninterface TaskInfo {\n  name: string;\n  description: string;\n  file: string;\n  hidden?: boolean;\n}\n\ninterface Props {\n  tasks: TaskInfo[];\n  path: string;\n}\n\nconst taskLink = (path: string, file: string) => `${path}/${file.replace(\".yaml\", \"\")}`;\n\nconst TaskList = (props: Props) => {\n  const { tasks, path } = props;\n\n  if (tasks.length === 0) {\n    return <Typography>No tasks to do</Typography>;\n  } else {\n    return (\n      <Grid container spacing={4}>\n        {tasks.map(\n          (task, i) =>\n            !task.hidden && (\n              <Grid item key={`tasklist-${i}`} lg={6} xs={12}>\n                <Box\n                  component={Paper}\n                  p={2}\n                  height=\"100%\"\n                  display=\"flex\"\n                  alignContent=\"space-between\"\n                  alignItems=\"flex-start\"\n                  flexWrap=\"wrap\"\n                >\n                  <Box>\n                    <Typography color=\"secondary\" gutterBottom>\n                      {task.name}\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                      {task.description}\n                    </Typography>\n                  </Box>\n                  <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"flex-end\" width=\"100%\">\n                    <Button\n                      component={Link}\n                      color=\"primary\"\n                      variant=\"contained\"\n                      to={taskLink(path, task.file)}\n                    >\n                      Work on task\n                    </Button>\n                  </Box>\n                </Box>\n              </Grid>\n            )\n        )}\n      </Grid>\n    );\n  }\n};\n\nexport default TaskList;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { useManifest } from \"../Manifest\";\n\nimport { useAsync } from \"react-async-hook\";\nimport { TASK_FILE, fileUrl } from \"../constants\";\nimport YAML from \"yaml\";\nimport { Typography } from \"@material-ui/core\";\nimport TaskList from \"./TaskList\";\n\ninterface MatchParams {\n  klass: string;\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {}\n\nconst fetchClassTasks = async (classId: string) => {\n  if (!classId) {\n    // Absurd. klass will actually always be defined\n    console.log(\"empty class\");\n    return;\n  }\n  const url = fileUrl(classId, TASK_FILE);\n\n  const req = await fetch(url);\n  const body = await req.text();\n\n  return YAML.parse(body, { prettyErrors: true });\n};\n\ninterface StatusProps {\n  msg: string;\n  error?: boolean;\n}\n\nconst Status = ({ msg, error }: StatusProps) => (\n  <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n    {error && \"Error: \"}\n    {msg}\n  </Typography>\n);\nconst ClassPage = (props: Props) => {\n  const classId = props.match.params.klass;\n\n  const manifest = useManifest();\n  const klass = manifest?.result?.classes?.find(({ folder }) => classId === folder);\n  // classTasks can begin loading before we confirm classId\n  const classTasks = useAsync(fetchClassTasks, [classId]);\n\n  /**\n   * Cases:\n   * if classTasks.result : Good\n   * while loading class && manifest: Class name\n   * while loading manifest: Loading...\n   * if (classTasks.error) : \"cannot load class X\"\n   *\n   */\n\n  if (classTasks.result) {\n    const { title, description, tasks } = classTasks.result;\n    return (\n      <div>\n        <div>\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n            {title}\n          </Typography>\n          <Typography variant=\"subtitle1\" gutterBottom align=\"center\">\n            {description}\n          </Typography>\n        </div>\n        <Typography variant=\"h5\" gutterBottom>\n          Assignments:\n        </Typography>\n        <TaskList tasks={tasks} path={props.location.pathname} />\n      </div>\n    );\n  } else if (classTasks.loading && klass) {\n    return (\n      <div>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n          Loading {klass.name}...\n        </Typography>\n      </div>\n    );\n  } else if (manifest.loading || classTasks.loading) {\n    return (\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n        Loading...\n      </Typography>\n    );\n  } else if (classTasks.error) {\n    if (klass) {\n      return <Status error msg=\"Cannot load class task file\" />;\n    } else {\n      return <Status error msg=\"No such class exists\" />;\n    }\n  } else {\n    return <Status error msg=\"Unreachable state???\" />;\n  }\n};\n\nexport default ClassPage;\n","import { Box, Link, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link as RLink } from \"react-router-dom\";\n\nconst Homepage = () => {\n  return (\n    <Box paddingY={2}>\n      <Typography align=\"center\" variant=\"h3\" component=\"h1\" gutterBottom>\n        Welcome to Int IPA\n      </Typography>\n      <Typography variant=\"h5\" component=\"p\">\n        This is just some place holder text right now. I'm not really sure what you want on this\n        page. One possible option is a self description, etc. I don't really know. Here's a link to\n        the{\" \"}\n        <Link component={RLink} to=\"/type\" color=\"secondary\">\n          the IPA keyboard\n        </Link>\n        .\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Homepage;\n","import { Theme, darken, fade, lighten } from \"@material-ui/core/styles\";\n\nexport interface Clickable {\n  onClick?: (char: string) => void;\n}\n\nexport const borderColor = (theme: Theme) =>\n  theme.palette.type === \"light\"\n    ? lighten(fade(theme.palette.divider, 1), 0.88)\n    : darken(fade(theme.palette.divider, 1), 0.68);\n","/**\n * Places of articulation\n */\nexport const PLACES = [\n  \"bilabial\",\n  \"labiodental\",\n  \"dental\",\n  \"alveolar\",\n  \"postalveolar\",\n  \"retroflex\",\n  \"palatal\",\n  \"velar\",\n  \"uvular\",\n  \"pharyngeal\",\n  \"glottal\",\n] as const;\n\n/**\n * Manners of articulation\n */\nexport const MANNERS = [\n  \"plosive\",\n  \"nasal\",\n  \"trill\",\n  \"tap\",\n  \"fricative\",\n  \"lateral fricative\",\n  \"approximant\",\n  \"lateral approximant\",\n] as const;\n\nexport type PlaceOfArt = typeof PLACES[number];\nexport type MannerOfArt = typeof MANNERS[number];\n\n// The sounds that are either impossible or not used\nexport const IMPOSSIBLE = \"_\";\nconst IMP = IMPOSSIBLE;\nexport const NOT_USED = \"\";\nconst NUL = NOT_USED;\n\n// prettier-ignore\nexport const PULMONICS = [\n  [\"p\", \"b\", NUL, NUL, NUL, NUL, \"t\", \"d\", NUL, NUL, \"ʈ\", \"ɖ\", \"c\", \"ɟ\", \"k\", \"g\", \"q\", \"ɢ\", NUL, IMP, \"ʔ\", IMP],\n  [NUL, \"m\", NUL, \"ɱ\", NUL, NUL, NUL, \"n\", NUL, NUL, NUL, \"ɳ\", NUL, \"ɲ\", NUL, \"ŋ\", NUL, \"ɴ\", IMP, IMP, IMP, IMP],\n  [NUL, \"ʙ\", NUL, NUL, NUL, NUL, NUL, \"r\", NUL, NUL, NUL, NUL, NUL, NUL, IMP, IMP, NUL, \"ʀ\", NUL, NUL, IMP, IMP],\n  [NUL, NUL, NUL, \"ⱱ\", NUL, NUL, NUL, \"ɾ\", NUL, NUL, NUL, \"ɽ\", NUL, NUL, IMP, IMP, NUL, NUL, NUL, NUL, IMP, IMP],\n  [\"ɸ\", \"β\", \"f\", \"v\", \"θ\", \"ð\", \"s\", \"z\", \"ʃ\", \"ʒ\", \"ʂ\", \"ʐ\", \"ç\", \"ʝ\", \"x\", \"ɣ\", \"χ\", \"ʁ\", \"ħ\", \"ʕ\", \"h\", \"ɦ\"],\n  [IMP, IMP, IMP, IMP, NUL, NUL, \"ɬ\", \"ɮ\", NUL, NUL, NUL, NUL, NUL, NUL, NUL, NUL, NUL, NUL, IMP, IMP, IMP, IMP],\n  [NUL, NUL, NUL, \"ʋ\", NUL, NUL, NUL, \"ɹ\", NUL, NUL, NUL, \"ɻ\", NUL, \"j\", NUL, \"ɰ\", NUL, NUL, NUL, NUL, IMP, IMP],\n  [IMP, IMP, IMP, IMP, NUL, NUL, NUL, \"l\", NUL, NUL, NUL, \"ɭ\", NUL, \"ʎ\", NUL, \"ʟ\", NUL, NUL, IMP, IMP, IMP, IMP]\n] as const;\n\nexport const CLICKS = new Map([\n  [\"ʘ\", \"Bilabial\"],\n  [\"ǀ\", \"Dental\"],\n  [\"ǃ\", \"(Post)alveolar\"],\n  [\"ǂ\", \"Palatoalveolar\"],\n  [\"ǁ\", \"Alveolar lateral\"],\n]);\n\nexport const IMPLOSIVES = new Map([\n  [\"ɓ\", \"Bilabial\"],\n  [\"ɗ\", \"Dental/alveolar\"],\n  [\"ʄ\", \"Palatal\"],\n  [\"ɠ\", \"Velar\"],\n  [\"ʛ\", \"Uvular\"],\n]);\n\n// U+02BC\nexport const EJECTIVE = \"ʼ\";\n\nexport const EJECTIVES = new Map([\n  [\"ʼ\", \"Examples:\"],\n  [\"pʼ\", \"Bilabial\"],\n  [\"tʼ\", \"Dental/alveolar\"],\n  [\"kʼ\", \"Velar\"],\n  [\"sʼ\", \"Alveolar fricative\"],\n]);\n\nexport const OTHERS = new Map([\n  [\"ʍ\", \"voiceless labial-velar fricative\"],\n  [\"w\", \"voiced labial-velar approximant\"],\n  [\"ɥ\", \"voiced labial-palatal approximant\"],\n  [\"ʜ\", \"voiceless epiglottal fricative\"],\n  [\"ʢ\", \"voiced epiglottal fricative\"],\n  [\"ʡ\", \"epiglottal plosive\"],\n]);\n","import React from \"react\";\n\nimport clsx from \"clsx\";\nimport { Clickable, borderColor } from \"./common\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { IMPOSSIBLE, MANNERS, PLACES, PULMONICS } from \"../../utils/ipa\";\n\nconst useStyles = makeStyles((theme) => ({\n  voiceless: {\n    cursor: \"pointer\",\n    width: \"50%\",\n    float: \"left\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  voiced: {\n    height: \"100%\",\n    cursor: \"pointer\",\n    width: \"50%\",\n    float: \"right\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  impossible: {\n    backgroundColor: theme.palette.action.disabledBackground,\n    color: \"transparent\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.disabledBackground,\n    },\n  },\n  symbol: {\n    userSelect: \"none\",\n    fontSize: \"1.65rem\",\n  },\n  sideBorder: {\n    borderLeft: `1px solid ${borderColor(theme)}`,\n    borderRight: `1px solid ${borderColor(theme)}`,\n  },\n  caps: {\n    textTransform: \"capitalize\",\n    padding: \"6px 5.5px\",\n  },\n  header: {\n    borderLeft: `1px solid ${borderColor(theme)}`,\n    borderRight: `1px solid ${borderColor(theme)}`,\n  },\n}));\n\ninterface Props extends Clickable {}\n\nconst Pulmonics = (props: Props) => {\n  const classes = useStyles();\n  const { onClick } = props;\n  const clickCallback = React.useCallback(\n    (char) => (char !== IMPOSSIBLE || undefined) && onClick && (() => onClick(char)),\n    [onClick]\n  );\n\n  const Cell = React.useCallback(\n    ({ x, y }: { x: number; y: number }) => {\n      const voiceless = PULMONICS[y]?.[x * 2];\n      const voiced = PULMONICS[y]?.[x * 2 + 1];\n\n      const hasBorders = x < 2 || x > 4 || y === 4;\n\n      return (\n        <TableCell\n          align=\"center\"\n          className={clsx(classes.symbol, hasBorders && classes.sideBorder)}\n          padding=\"none\"\n        >\n          <span\n            className={clsx(classes.voiceless, voiceless === IMPOSSIBLE && classes.impossible)}\n            onClick={clickCallback(voiceless)}\n          >\n            {voiceless}\n          </span>\n          <span\n            className={clsx(classes.voiced, voiced === IMPOSSIBLE && classes.impossible)}\n            onClick={clickCallback(voiced)}\n          >\n            {voiced}\n          </span>\n        </TableCell>\n      );\n    },\n    [classes, clickCallback]\n  );\n\n  return (\n    <TableContainer>\n      <Table size=\"small\" aria-label=\"Consonants (Pulmonics)\">\n        <TableHead>\n          <TableRow>\n            <TableCell>{/* Filler for articulation */}</TableCell>\n            {PLACES.map((place) => (\n              <TableCell\n                key={`keyboard-place-${place}`}\n                align=\"center\"\n                className={clsx(classes.header, classes.caps)}\n              >\n                {place}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {MANNERS.map((manner, y) => (\n            <TableRow key={`keyboard-manner-${manner}`}>\n              <TableCell className={classes.caps}>{manner}</TableCell>\n              {PLACES.map((place, x) => (\n                <Cell key={`keyboard-l-${manner}-${place}`} x={x} y={y} />\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default Pulmonics;\n","import React from \"react\";\n\nimport clsx from \"clsx\";\nimport { Clickable, borderColor } from \"./common\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CLICKS, EJECTIVES, IMPLOSIVES } from \"../../utils/ipa\";\n\nconst useStyles = makeStyles((theme) => ({\n  symbol: {\n    userSelect: \"none\",\n    fontSize: \"1.65rem\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  sideBorder: {\n    borderLeft: `1px solid ${borderColor(theme)}`,\n    borderRight: `1px solid ${borderColor(theme)}`,\n  },\n  caps: {\n    textTransform: \"capitalize\",\n    padding: \"6px 5.5px\",\n  },\n  descr: {\n    paddingLeft: \"4px\",\n    fontSize: \"0.8rem\",\n    verticalAlign: \"middle\",\n  },\n  header: {\n    borderLeft: `1px solid ${borderColor(theme)}`,\n    borderRight: `1px solid ${borderColor(theme)}`,\n  },\n}));\n\ninterface Props extends Clickable {}\n\nconst NonPulmonics = (props: Props) => {\n  const classes = useStyles();\n  const { onClick = () => {} } = props;\n\n  const sounds = React.useMemo(() => {\n    const clicks = Array.from(CLICKS.entries());\n    const implosives = Array.from(IMPLOSIVES.entries());\n    const ejectives = Array.from(EJECTIVES.entries());\n\n    return clicks.map((click, i) => [click, implosives[i], ejectives[i]]);\n  }, []);\n\n  const Cell = React.useCallback(\n    ({ symbol, name }: { symbol: string; name: string }) => {\n      return (\n        <TableCell\n          className={clsx(classes.symbol, classes.sideBorder)}\n          onClick={() => onClick(symbol)}\n        >\n          {symbol} <span className={classes.descr}>{name}</span>\n        </TableCell>\n      );\n    },\n    [classes, onClick]\n  );\n\n  return (\n    <TableContainer>\n      <Table size=\"small\" aria-label=\"Consonants (Pulmonics)\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" className={classes.header}>\n              Clicks\n            </TableCell>\n            <TableCell align=\"center\" className={classes.header}>\n              Voiced implosives\n            </TableCell>\n            <TableCell align=\"center\" className={classes.header}>\n              Ejectives\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sounds.map((row, i) => (\n            <TableRow key={`keyboard-nonpulmonic-${i}`}>\n              {row.map(([symbol, name], j) => (\n                <Cell key={`keyboard-nonpulmonic-${i}-${j}`} symbol={symbol} name={name} />\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default NonPulmonics;\n","import React from \"react\";\nimport { Box, Grid, Paper, Typography } from \"@material-ui/core\";\n\nimport Pulmonics from \"./Pulmonics\";\nimport { Clickable } from \"./common\";\nimport NonPulmonics from \"./NonPulmonics\";\n\n// import BackspaceOutlinedIcon from \"@material-ui/icons/BackspaceOutlined\";\n\ninterface Props extends Clickable {}\n\nconst Keyboard = (props: Props) => {\n  const { onClick } = props;\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Box component={Paper} p={1} width=\"auto\">\n          <Typography variant=\"h6\" component=\"p\" gutterBottom>\n            Consonants (Pulmonics)\n          </Typography>\n          <Pulmonics onClick={onClick} />\n          <Typography variant=\"caption\" align=\"center\" component=\"p\">\n            Symbols to the right in a cell are voiced, to the left are voiceless. Shaded areas\n            denote articulations judged impossible.\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Box component={Paper} p={1} width=\"auto\">\n          <Typography variant=\"h6\" component=\"p\" gutterBottom>\n            Consonants (Non-pulmonics)\n          </Typography>\n          <NonPulmonics onClick={onClick} />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Keyboard;\n","import React, { RefObject, useCallback, useEffect, useReducer, useRef } from \"react\";\nimport { Box, Grid, IconButton, TextField } from \"@material-ui/core\";\n\nimport Keyboard from \"./keyboard/Keyboard\";\n\nimport BackspaceOutlinedIcon from \"@material-ui/icons/BackspaceOutlined\";\n\ninterface Action<T> {\n  type: T;\n}\n\ninterface ValueAction<T> extends Action<T> {\n  type: T;\n  value: string;\n}\n\ntype Actions = Action<\"delete\"> | ValueAction<\"append\"> | ValueAction<\"set\">;\ninterface State {\n  cursor: number;\n  value: string;\n  ref: RefObject<HTMLInputElement>;\n}\n\nfunction reducer(state: State, action: Actions): State {\n  const { value } = state;\n  // make broad assumptions about never having a large cursor selection\n  const cursor = state.ref?.current?.selectionStart || 0;\n  console.log(cursor);\n  switch (action.type) {\n    case \"delete\":\n      if (cursor === 0) {\n        return state;\n      } else {\n        return {\n          ...state,\n          cursor: cursor - 1,\n          value: value.slice(0, cursor - 1) + value.slice(cursor, value.length),\n        };\n      }\n    case \"append\":\n      return {\n        ...state,\n        cursor: cursor + action.value.length,\n        value: value.slice(0, cursor) + action.value + value.slice(cursor, value.length),\n      };\n    case \"set\":\n      return { ...state, value: action.value };\n  }\n}\n\nconst TypeIPA = () => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [state, dispatch] = useReducer(reducer, { cursor: 0, value: \"\", ref: inputRef });\n  const keyboardClick = useCallback((char: string) => dispatch({ type: \"append\", value: char }), [\n    dispatch,\n  ]);\n  const setValue = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => dispatch({ type: \"set\", value: e.target.value }),\n    [dispatch]\n  );\n  const deleteClick = useCallback(() => dispatch({ type: \"delete\" }), [dispatch]);\n\n  const { cursor } = state;\n\n  // minor side effect: the textbox is auto selected on page load which is kinda alright\n  useEffect(() => {\n    inputRef?.current?.setSelectionRange(cursor, cursor);\n  }, [cursor]);\n\n  return (\n    <div>\n      <Box paddingY={2}>\n        <Grid container alignItems=\"center\" justify=\"center\" spacing={2}>\n          <Grid item xs={10} md={8}>\n            <TextField\n              id=\"filled-multiline-flexible\"\n              multiline\n              fullWidth\n              rowsMax={4}\n              inputRef={inputRef}\n              value={state.value}\n              onChange={setValue}\n              variant=\"outlined\"\n              inputProps={{ spellCheck: \"false\" }}\n              label=\"Type IPA\"\n              color=\"secondary\"\n            />\n          </Grid>\n          <Grid>\n            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={deleteClick}>\n              <BackspaceOutlinedIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Box>\n      <Keyboard onClick={keyboardClick} />\n    </div>\n  );\n};\n\nexport default TypeIPA;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport ClassPage from \"./components/ClassPage\";\nimport Homepage from \"./components/Homepage\";\nimport TypeIPA from \"./components/TypeIPA\";\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route path=\"/type\" exact component={TypeIPA} />\n      <Route path=\"/\" exact component={Homepage} />\n      <Route path=\"/class/:klass\" component={ClassPage} />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import { Theme } from \"@material-ui/core\";\n\nexport const NOTCH_LEFT = \"max(calc(env(safe-area-inset-left, 0) - 8px), 0px)\";\nexport const NOTCH_RIGHT = \"max(calc(env(safe-area-inset-right, 0) - 8px), 0px)\";\n\nexport const notchGutters = (theme: Theme) => ({\n  paddingLeft: `max(env(safe-area-inset-left, 0px), ${theme.spacing(2)}px)`,\n  paddingRight: `max(env(safe-area-inset-right, 0px), ${theme.spacing(2)}px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    paddingLeft: `max(env(safe-area-inset-left, 0px), ${theme.spacing(3)}px)`,\n    paddingRight: `max(env(safe-area-inset-right, 0px), ${theme.spacing(3)}px)`,\n  },\n});\n","import React, { useCallback, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Box,\n  Divider,\n  Drawer,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Switch,\n  Theme,\n  Toolbar,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport KeyboardIcon from \"@material-ui/icons/Keyboard\";\n\nimport { Link, matchPath, useLocation } from \"react-router-dom\";\n\nimport { useManifest } from \"../Manifest\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { notchGutters } from \"../utils/styles\";\n\nconst DRAWER_WIDTH = 275;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  itemGutters: {\n    paddingLeft: `max(env(safe-area-inset-left, 0px), ${theme.spacing(2)}px)`,\n  },\n  gutters: notchGutters(theme),\n}));\n\nconst Loading = ({ error }: { error?: boolean }) => (\n  <>\n    <ListItem>\n      <ListItemText primary={error ? \"Error loading classes.\" : \"Loading classes...\"} />\n    </ListItem>\n    <LinearProgress />\n  </>\n);\n\ninterface ListLinkProps {\n  gutters: string;\n  to: string;\n  text: string;\n  exact?: boolean;\n  icon?: JSX.Element;\n}\n\nconst ListLink = (props: ListLinkProps) => {\n  const { pathname } = useLocation();\n  const { to, text, icon, exact, gutters } = props;\n\n  const selected = !!matchPath(pathname, { path: to, exact: exact });\n\n  return (\n    <ListItem button component={Link} to={to} selected={selected} classes={{ gutters: gutters }}>\n      {icon && <ListItemIcon>{icon}</ListItemIcon>}\n      <ListItemText primary={text} />\n    </ListItem>\n  );\n};\n\nconst DarkSwitch = withStyles({\n  switchBase: {\n    color: grey[100],\n    \"&$checked\": {\n      color: \"black\",\n    },\n    \"&$checked + $track\": {\n      backgroundColor: grey[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\ninterface Props {\n  darkMode: boolean;\n  changeDarkMode: (mode: boolean) => void;\n}\n\nconst Header = (props: Props) => {\n  const [drawer, setDrawer] = useState(false);\n  const classes = useStyles();\n\n  const { changeDarkMode } = props;\n\n  const { result, loading, error } = useManifest();\n\n  const openDrawer = useCallback(() => {\n    setDrawer(true);\n  }, []);\n  const closeDrawer = useCallback(() => {\n    setDrawer(false);\n  }, []);\n\n  const toggleDarkMode = useCallback(\n    (event) => {\n      changeDarkMode(event.target.checked);\n    },\n    [changeDarkMode]\n  );\n\n  const list = (\n    <Box width=\"100%\">\n      <List>\n        <ListLink to=\"/\" text=\"Home\" icon={<HomeIcon />} exact gutters={classes.itemGutters} />\n      </List>\n      <Divider />\n      <List>\n        <ListSubheader classes={{ gutters: classes.itemGutters }}>Classes</ListSubheader>\n        {error && <Loading error />}\n        {loading && <Loading />}\n        {result &&\n          result.classes.map(\n            ({ name, folder, hidden }, i) =>\n              !hidden && (\n                <ListLink\n                  key={`class-list-${i}`}\n                  to={`/class/${folder}`}\n                  text={name}\n                  gutters={classes.itemGutters}\n                />\n              )\n          )}\n      </List>\n      <Divider />\n      <List>\n        <ListSubheader classes={{ gutters: classes.itemGutters }}>Tools</ListSubheader>\n        <ListLink\n          to=\"/type\"\n          text=\"IPA Keyboard\"\n          icon={<KeyboardIcon />}\n          exact\n          gutters={classes.itemGutters}\n        />\n      </List>\n    </Box>\n  );\n\n  return (\n    <div>\n      <Drawer anchor=\"left\" open={drawer} onClose={closeDrawer}>\n        <Box\n          display=\"flex\"\n          flexWrap=\"wrap\"\n          width={DRAWER_WIDTH}\n          alignContent=\"space-between\"\n          alignItems=\"flex-start\"\n          height=\"100%\"\n          overflow=\"hidden\"\n          role=\"presentation\"\n        >\n          {list}\n          <Box width=\"100%\" mb={2}>\n            <Typography component=\"div\">\n              <Grid component=\"label\" container justify=\"center\" alignItems=\"center\" spacing={1}>\n                <Grid item>Light</Grid>\n                <Grid item>\n                  <DarkSwitch color=\"default\" checked={props.darkMode} onChange={toggleDarkMode} />\n                </Grid>\n                <Grid item>Dark</Grid>\n              </Grid>\n            </Typography>\n          </Box>\n        </Box>\n      </Drawer>\n\n      <AppBar position=\"static\">\n        <Toolbar classes={{ gutters: classes.gutters }}>\n          <IconButton onClick={openDrawer} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">Int IPA</Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\n\nimport Router from \"./Router\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Header from \"./components/Header\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue, indigo } from \"@material-ui/core/colors\";\nimport { Theme, makeStyles, useMediaQuery } from \"@material-ui/core\";\nimport { notchGutters } from \"./utils/styles\";\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    // type: \"dark\",\n    secondary: {\n      main: blue[900],\n    },\n    primary: {\n      main: indigo[700],\n    },\n  },\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    secondary: {\n      main: blue[500],\n    },\n    primary: {\n      main: indigo[700],\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  // Modified from source\n  // https://github.com/mui-org/material-ui/blob/v4.11.0/packages/material-ui/src/Container/Container.js\n  containerRoot: {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    display: \"block\", // Fix IE 11 layout when used with main.\n    margin: theme.spacing(1, \"auto\", \"env(safe-area-inset-bottom, 0px)\"),\n    ...notchGutters(theme),\n  },\n}));\n\nconst DARK_KEY = \"useDarkMode\";\n\nexport default function App() {\n  const classes = useStyles();\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const [dark, setDark] = React.useState<boolean | null>(() => {\n    const value = window.localStorage.getItem(DARK_KEY);\n    return value ? value === \"true\" : null;\n  });\n\n  const changeDarkMode = React.useCallback(\n    (dark: boolean) => {\n      window.localStorage.setItem(DARK_KEY, dark.toString());\n      setDark(dark);\n    },\n    [setDark]\n  );\n\n  const darkMode = dark === null ? prefersDarkMode : dark;\n\n  const theme = React.useMemo(() => createMuiTheme(darkMode ? darkTheme : lightTheme), [darkMode]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header darkMode={darkMode} changeDarkMode={changeDarkMode} />\n      <Container maxWidth=\"lg\" classes={{ root: classes.containerRoot }}>\n        <Router />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport Manifest from \"./Manifest\";\n\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Manifest>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Manifest>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}