{"version":3,"sources":["constants.ts","Manifest.tsx","components/TaskList.tsx","components/ClassPage.tsx","components/keyboard/common.ts","utils/ipa.ts","components/keyboard/Pulmonics.tsx","components/keyboard/Keyboard.tsx","components/Homepage.tsx","Router.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["MANIFEST_FILE","process","ManifestContext","React","createContext","fetchManifest","a","fetch","req","text","body","YAML","parse","prettyErrors","useManifest","asyncManifest","useContext","Error","errorShown","Manifest","children","manifest","useAsync","error","console","log","message","name","match","alert","Provider","value","taskLink","path","file","replace","TaskList","props","tasks","length","Typography","Grid","container","spacing","map","task","i","hidden","item","lg","xs","Box","component","Paper","p","height","display","alignContent","alignItems","flexWrap","color","gutterBottom","variant","description","justifyContent","width","Button","Link","to","fetchClassTasks","classId","folder","url","Status","msg","align","ClassPage","params","klass","result","classes","find","classTasks","title","location","pathname","loading","borderColor","theme","palette","type","lighten","fade","divider","darken","PLACES","MANNERS","IMPOSSIBLE","NUL","PULMONICS","useStyles","makeStyles","voiceless","cursor","float","backgroundColor","action","hover","voiced","impossible","disabledBackground","symbol","fontSize","sideBorder","borderLeft","borderRight","caps","textTransform","padding","header","Pulmonics","onClick","clickCallback","useCallback","char","undefined","Cell","x","y","hasBorders","TableCell","className","clsx","TableContainer","Table","size","aria-label","TableHead","TableRow","place","TableBody","manner","Keyboard","Homepage","useState","setName","Router","exact","createStyles","listTitle","paddingTop","paddingBottom","paddingLeft","paddingRight","Loading","ListItem","ListItemText","primary","LinearProgress","ListLink","useLocation","icon","selected","matchPath","button","ListItemIcon","DarkSwitch","withStyles","switchBase","grey","checked","track","Switch","Header","drawer","setDrawer","openDrawer","closeDrawer","toggleDarkMode","event","changeDarkMode","target","useEffect","list","role","List","Divider","ListSubheader","Drawer","anchor","open","onClose","overflow","mb","justify","darkMode","onChange","AppBar","position","Toolbar","IconButton","edge","lightTheme","createMuiTheme","secondary","main","blue","indigo","darkTheme","DARK_KEY","App","prefersDarkMode","useMediaQuery","window","localStorage","getItem","dark","setDark","setItem","toString","useMemo","ThemeProvider","CssBaseline","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f3fb808.chunk.js","sourcesContent":["// A list of constants for the project\n\n// PUBLIC_URL access\nexport const BASE_URL = process.env.PUBLIC_URL;\n\n// URL of teh manifest file\nexport const MANIFEST_FILE = `${BASE_URL}/manifest.yaml`;\n\n// Name of the task file\nexport const TASK_FILE = \"tasks.yaml\";\n\n// Generate a full file URL given the folder and the pathname\nexport const fileUrl = (folder: string, path: string) => `${BASE_URL}/${folder}/${path}`;\n","import React, { useContext } from \"react\";\nimport { useAsync, UseAsyncReturn } from \"react-async-hook\";\nimport YAML from \"yaml\";\nimport { MANIFEST_FILE } from \"./constants\";\n\nimport { ManifestType } from \"./utils/parsers\";\n\nconst ManifestContext = React.createContext<UseAsyncReturn<ManifestType, never[]> | null>(null);\n\nconst fetchManifest = async (): Promise<ManifestType> => {\n  const req = await fetch(MANIFEST_FILE);\n  const body = await req.text();\n  return YAML.parse(body, { prettyErrors: true });\n};\n\nexport const useManifest = () => {\n  const asyncManifest = useContext(ManifestContext);\n  if (!asyncManifest) {\n    // Absurd\n    throw new Error(\"Error: you must create an initial manifest object\");\n  }\n  return asyncManifest;\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\n// Only show the error once\nlet errorShown = false;\n\nconst Manifest = ({ children }: Props) => {\n  const manifest = useAsync(fetchManifest, []);\n  if (manifest.error && !errorShown) {\n    errorShown = true;\n    console.log(manifest.error.message);\n    console.log(manifest.error);\n    if (manifest.error.name.match(/^YAML/)) {\n      // This is a YAML error\n      alert(\n        `Error: Your manifest.yaml contains invalid syntax. Please check the console for more info.`\n      );\n    } else {\n      alert(\"There was an error loading your manifest.yaml\");\n    }\n  }\n  return <ManifestContext.Provider value={manifest}>{children}</ManifestContext.Provider>;\n};\n\nexport default Manifest;\n","import React from \"react\";\n\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\ninterface TaskInfo {\n  name: string;\n  description: string;\n  file: string;\n  hidden?: boolean;\n}\n\ninterface Props {\n  tasks: TaskInfo[];\n  path: string;\n}\n\nconst taskLink = (path: string, file: string) => `${path}/${file.replace(\".yaml\", \"\")}`;\n\nconst TaskList = (props: Props) => {\n  const { tasks, path } = props;\n\n  if (tasks.length === 0) {\n    return <Typography>No tasks to do</Typography>;\n  } else {\n    return (\n      <Grid container spacing={4}>\n        {tasks.map(\n          (task, i) =>\n            !task.hidden && (\n              <Grid item key={`tasklist-${i}`} lg={6} xs={12}>\n                <Box\n                  component={Paper}\n                  p={2}\n                  height=\"100%\"\n                  display=\"flex\"\n                  alignContent=\"space-between\"\n                  alignItems=\"flex-start\"\n                  flexWrap=\"wrap\"\n                >\n                  <Box>\n                    <Typography color=\"secondary\" gutterBottom>\n                      {task.name}\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                      {task.description}\n                    </Typography>\n                  </Box>\n                  <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"flex-end\" width=\"100%\">\n                    <Button\n                      component={Link}\n                      color=\"primary\"\n                      variant=\"contained\"\n                      to={taskLink(path, task.file)}\n                    >\n                      Work on task\n                    </Button>\n                  </Box>\n                </Box>\n              </Grid>\n            )\n        )}\n      </Grid>\n    );\n  }\n};\n\nexport default TaskList;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { useManifest } from \"../Manifest\";\n\nimport { useAsync } from \"react-async-hook\";\nimport { fileUrl, TASK_FILE } from \"../constants\";\nimport YAML from \"yaml\";\nimport { Typography } from \"@material-ui/core\";\nimport TaskList from \"./TaskList\";\n\ninterface MatchParams {\n  klass: string;\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {}\n\nconst fetchClassTasks = async (classId: string) => {\n  if (!classId) {\n    // Absurd. klass will actually always be defined\n    console.log(\"empty class\");\n    return;\n  }\n  const url = fileUrl(classId, TASK_FILE);\n\n  const req = await fetch(url);\n  const body = await req.text();\n\n  return YAML.parse(body, { prettyErrors: true });\n};\n\ninterface StatusProps {\n  msg: string;\n  error?: boolean;\n}\n\nconst Status = ({ msg, error }: StatusProps) => (\n  <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n    {error && \"Error: \"}\n    {msg}\n  </Typography>\n);\nconst ClassPage = (props: Props) => {\n  const classId = props.match.params.klass;\n\n  const manifest = useManifest();\n  const klass = manifest?.result?.classes?.find(({ folder }) => classId === folder);\n  // classTasks can begin loading before we confirm classId\n  const classTasks = useAsync(fetchClassTasks, [classId]);\n\n  /**\n   * Cases:\n   * if classTasks.result : Good\n   * while loading class && manifest: Class name\n   * while loading manifest: Loading...\n   * if (classTasks.error) : \"cannot load class X\"\n   *\n   */\n\n  if (classTasks.result) {\n    const { title, description, tasks } = classTasks.result;\n    return (\n      <div>\n        <div>\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n            {title}\n          </Typography>\n          <Typography variant=\"subtitle1\" gutterBottom align=\"center\">\n            {description}\n          </Typography>\n        </div>\n        <Typography variant=\"h5\" gutterBottom>\n          Assignments:\n        </Typography>\n        <TaskList tasks={tasks} path={props.location.pathname} />\n      </div>\n    );\n  } else if (classTasks.loading && klass) {\n    return (\n      <div>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n          Loading {klass.name}...\n        </Typography>\n      </div>\n    );\n  } else if (manifest.loading || classTasks.loading) {\n    return (\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n        Loading...\n      </Typography>\n    );\n  } else if (classTasks.error) {\n    if (klass) {\n      return <Status error msg=\"Cannot load class task file\" />;\n    } else {\n      return <Status error msg=\"No such class exists\" />;\n    }\n  } else {\n    return <Status error msg=\"Unreachable state???\" />;\n  }\n};\n\nexport default ClassPage;\n","import { darken, lighten, fade, Theme } from \"@material-ui/core/styles\";\n\nexport interface Clickable {\n  onClick?: (char: string) => void;\n}\n\nexport const borderColor = (theme: Theme) =>\n  theme.palette.type === \"light\"\n    ? lighten(fade(theme.palette.divider, 1), 0.88)\n    : darken(fade(theme.palette.divider, 1), 0.68);\n","/**\n * Places of articulation\n */\nexport const PLACES = [\n  \"bilabial\",\n  \"labiodental\",\n  \"dental\",\n  \"alveolar\",\n  \"postalveolar\",\n  \"retroflex\",\n  \"palatal\",\n  \"velar\",\n  \"uvular\",\n  \"pharyngeal\",\n  \"glottal\",\n] as const;\n\n/**\n * Manners of articulation\n */\nexport const MANNERS = [\n  \"plosive\",\n  \"nasal\",\n  \"trill\",\n  \"tap\",\n  \"fricative\",\n  \"lateral fricative\",\n  \"approximant\",\n  \"lateral approximant\",\n] as const;\n\nexport type PlaceOfArt = typeof PLACES[number];\nexport type MannerOfArt = typeof MANNERS[number];\n\n// The sounds that are either impossible or not used\nexport const IMPOSSIBLE = \"_\";\nconst IMP = IMPOSSIBLE;\nexport const NOT_USED = \"\";\nconst NUL = NOT_USED;\n\n// prettier-ignore\nexport const PULMONICS = [\n  [\"p\", \"b\", NUL, NUL, NUL, NUL, \"t\", \"d\", NUL, NUL, \"ʈ\", \"ɖ\", \"c\", \"ɟ\", \"k\", \"g\", \"q\", \"ɢ\", NUL, IMP, \"ʔ\", IMP],\n  [NUL, \"m\", NUL, \"ɱ\", NUL, NUL, NUL, \"n\", NUL, NUL, NUL, \"ɳ\", NUL, \"ɲ\", NUL, \"ŋ\", NUL, \"ɴ\", IMP, IMP, IMP, IMP],\n  [NUL, \"ʙ\", NUL, NUL, NUL, NUL, NUL, \"r\", NUL, NUL, NUL, NUL, NUL, NUL, IMP, IMP, NUL, \"ʀ\", NUL, NUL, IMP, IMP],\n  [NUL, NUL, NUL, \"ⱱ\", NUL, NUL, NUL, \"ɾ\", NUL, NUL, NUL, \"ɽ\", NUL, NUL, IMP, IMP, NUL, NUL, NUL, NUL, IMP, IMP],\n  [\"ɸ\", \"β\", \"f\", \"v\", \"θ\", \"ð\", \"s\", \"z\", \"ʃ\", \"ʒ\", \"ʂ\", \"ʐ\", \"ç\", \"ʝ\", \"x\", \"ɣ\", \"χ\", \"ʁ\", \"ħ\", \"ʕ\", \"h\", \"ɦ\"],\n  [IMP, IMP, IMP, IMP, NUL, NUL, \"ɬ\", \"ɮ\", NUL, NUL, NUL, NUL, NUL, NUL, NUL, NUL, NUL, NUL, IMP, IMP, IMP, IMP],\n  [NUL, NUL, NUL, \"ʋ\", NUL, NUL, NUL, \"ɹ\", NUL, NUL, NUL, \"ɻ\", NUL, \"j\", NUL, \"ɰ\", NUL, NUL, NUL, NUL, IMP, IMP],\n  [IMP, IMP, IMP, IMP, NUL, NUL, NUL, \"l\", NUL, NUL, NUL, \"ɭ\", NUL, \"ʎ\", NUL, \"ʟ\", NUL, NUL, IMP, IMP, IMP, IMP]\n] as const;\n\nexport const CLICKS = {\n  bilabial: \"ʘ\",\n  dental: \"ǀ\",\n  postalveolar: \"ǃ\",\n  palatoalveolar: \"ǂ\",\n  \"alveolar lateral\": \"ǁ\",\n};\nexport const IMPLOSIVES = { bilabial: \"ɓ\", dental: \"ɗ\", palatal: \"ʄ\", velar: \"ɠ\", uvular: \"ʛ\" };\n\nexport const EJECTIVE = \"ʼ\";\n","import React from \"react\";\n\nimport clsx from \"clsx\";\nimport { Clickable, borderColor } from \"./common\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { IMPOSSIBLE, MANNERS, PLACES, PULMONICS } from \"../../utils/ipa\";\n\nconst useStyles = makeStyles((theme) => ({\n  voiceless: {\n    cursor: \"pointer\",\n    width: \"50%\",\n    float: \"left\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  voiced: {\n    height: \"100%\",\n    cursor: \"pointer\",\n    width: \"50%\",\n    float: \"right\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  impossible: {\n    backgroundColor: theme.palette.action.disabledBackground,\n    color: \"transparent\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.disabledBackground,\n    },\n  },\n  symbol: {\n    fontSize: \"1.6rem\",\n  },\n  sideBorder: {\n    borderLeft: `1px solid ${borderColor(theme)}`,\n    borderRight: `1px solid ${borderColor(theme)}`,\n  },\n  caps: {\n    textTransform: \"capitalize\",\n    padding: \"6px\",\n  },\n  header: {\n    borderLeft: `1px solid ${borderColor(theme)}`,\n    borderRight: `1px solid ${borderColor(theme)}`,\n  },\n}));\n\ninterface Props extends Clickable {}\n\nconst Pulmonics = (props: Props) => {\n  const classes = useStyles();\n  const { onClick } = props;\n  const clickCallback = React.useCallback(\n    (char) => (char !== IMPOSSIBLE || undefined) && onClick && (() => onClick(char)),\n    [onClick]\n  );\n\n  const Cell = React.useCallback(\n    ({ x, y }: { x: number; y: number }) => {\n      const voiceless = PULMONICS[y]?.[x * 2];\n      const voiced = PULMONICS[y]?.[x * 2 + 1];\n\n      const hasBorders = x < 2 || x > 4 || y === 4;\n\n      return (\n        <TableCell\n          align=\"center\"\n          className={clsx(classes.symbol, hasBorders && classes.sideBorder)}\n          padding=\"none\"\n        >\n          <span\n            className={clsx(classes.voiceless, voiceless === IMPOSSIBLE && classes.impossible)}\n            onClick={clickCallback(voiceless)}\n          >\n            {voiceless}\n          </span>\n          <span\n            className={clsx(classes.voiced, voiced === IMPOSSIBLE && classes.impossible)}\n            onClick={clickCallback(voiced)}\n          >\n            {voiced}\n          </span>\n        </TableCell>\n      );\n    },\n    [classes, clickCallback]\n  );\n\n  return (\n    <TableContainer>\n      <Table size=\"small\" aria-label=\"Consonants (Pulmonics)\">\n        <TableHead>\n          <TableRow>\n            <TableCell>{/* Filler for articulation */}</TableCell>\n            {PLACES.map((place) => (\n              <TableCell\n                key={`keyboard-place-${place}`}\n                align=\"center\"\n                className={clsx(classes.header, classes.caps)}\n              >\n                {place}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {MANNERS.map((manner, y) => (\n            <TableRow key={`keyboard-manner-${manner}`}>\n              <TableCell className={classes.caps}>{manner}</TableCell>\n              {PLACES.map((place, x) => (\n                <Cell key={`keyboard-l-${manner}-${place}`} x={x} y={y} />\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default Pulmonics;\n","import React from \"react\";\nimport { Box, Paper, Typography } from \"@material-ui/core\";\n\nimport Pulmonics from \"./Pulmonics\";\nimport { Clickable } from \"./common\";\n\ninterface Props extends Clickable {}\n\nconst Keyboard = (props: Props) => {\n  const { onClick } = props;\n\n  return (\n    <Box component={Paper} p={1} width=\"auto\">\n      <Typography variant=\"h6\" component=\"p\" gutterBottom>\n        Consonants (Pulmonics)\n      </Typography>\n      <Pulmonics onClick={onClick} />\n    </Box>\n  );\n};\n\nexport default Keyboard;\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport Keyboard from \"./keyboard/Keyboard\";\n\nconst Homepage = () => {\n  const [name, setName] = React.useState(\"\");\n\n  return (\n    <div>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Create React App v4-beta example with TypeScript↗ d͡ʒitɐ˞ ◌˞n̪d̥{name}\n      </Typography>\n      <Keyboard\n        onClick={(char) => {\n          setName(name + char);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport ClassPage from \"./components/ClassPage\";\nimport Homepage from \"./components/Homepage\";\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route path=\"/class/:klass\" component={ClassPage} />\n      <Route path=\"/\" exact component={Homepage} />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Drawer,\n  List,\n  Divider,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  ListSubheader,\n  Switch,\n  withStyles,\n  Box,\n  Grid,\n} from \"@material-ui/core\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nimport { Link, useLocation, matchPath } from \"react-router-dom\";\n\nimport { useManifest } from \"../Manifest\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { blueGrey, grey } from \"@material-ui/core/colors\";\n\nconst DRAWER_WIDTH = 275;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    listTitle: {\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n  })\n);\n\nconst Loading = ({ error }: { error?: boolean }) => (\n  <>\n    <ListItem>\n      <ListItemText primary={error ? \"Error loading classes.\" : \"Loading classes...\"} />\n    </ListItem>\n    <LinearProgress />\n  </>\n);\n\ninterface ListLinkProps {\n  to: string;\n  text: string;\n  exact?: boolean;\n  icon?: JSX.Element;\n}\n\nconst ListLink = (props: ListLinkProps) => {\n  const { pathname } = useLocation();\n  const { to, text, icon, exact } = props;\n\n  const selected = !!matchPath(pathname, { path: to, exact: exact });\n\n  return (\n    <ListItem button component={Link} to={to} selected={selected}>\n      {icon && <ListItemIcon>{icon}</ListItemIcon>}\n      <ListItemText primary={text} />\n    </ListItem>\n  );\n};\n\nconst DarkSwitch = withStyles({\n  switchBase: {\n    color: grey[100],\n    \"&$checked\": {\n      color: \"black\",\n    },\n    \"&$checked + $track\": {\n      backgroundColor: grey[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\ninterface Props {\n  darkMode: boolean;\n  changeDarkMode: (mode: boolean) => void;\n}\n\nconst Header = (props: Props) => {\n  const [drawer, setDrawer] = useState(false);\n  const classes = useStyles();\n\n  const { result, loading, error } = useManifest();\n\n  const openDrawer = useCallback(() => {\n    setDrawer(true);\n  }, []);\n  const closeDrawer = useCallback(() => {\n    setDrawer(false);\n  }, []);\n\n  const toggleDarkMode = useCallback(\n    (event) => {\n      props.changeDarkMode(event.target.checked);\n    },\n    [props.changeDarkMode]\n  );\n\n  const location = useLocation();\n  useEffect(() => {\n    closeDrawer();\n  }, [location]);\n\n  const list = (\n    <Box role=\"presentation\" width=\"100%\">\n      {/* <Typography className={classes.listTitle} variant=\"h6\">\n        Int IPA\n      </Typography>\n      <Divider /> */}\n      <List>\n        <ListLink to=\"/\" text=\"Home\" icon={<HomeIcon />} exact />\n      </List>\n      <Divider />\n      <List>\n        <ListSubheader>Classes</ListSubheader>\n        {error && <Loading error />}\n        {loading && <Loading />}\n        {result &&\n          result.classes.map(\n            ({ name, folder, hidden }, i) =>\n              !hidden && <ListLink key={`class-list-${i}`} to={`/class/${folder}`} text={name} />\n          )}\n      </List>\n    </Box>\n  );\n\n  return (\n    <div>\n      <Drawer anchor=\"left\" open={drawer} onClose={closeDrawer}>\n        <Box\n          display=\"flex\"\n          flexWrap=\"wrap\"\n          width={DRAWER_WIDTH}\n          alignContent=\"space-between\"\n          alignItems=\"flex-start\"\n          height=\"100%\"\n          overflow=\"hidden\"\n        >\n          {list}\n          <Box width=\"100%\" mb={2}>\n            <Typography component=\"div\">\n              <Grid component=\"label\" container justify=\"center\" alignItems=\"center\" spacing={1}>\n                <Grid item>Light</Grid>\n                <Grid item>\n                  <DarkSwitch color=\"default\" checked={props.darkMode} onChange={toggleDarkMode} />\n                </Grid>\n                <Grid item>Dark</Grid>\n              </Grid>\n            </Typography>\n          </Box>\n        </Box>\n      </Drawer>\n\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton onClick={openDrawer} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">Int IPA</Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\n\nimport Router from \"./Router\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Header from \"./components/Header\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue, indigo } from \"@material-ui/core/colors\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    // type: \"dark\",\n    secondary: {\n      main: blue[900],\n    },\n    primary: {\n      main: indigo[700],\n    },\n  },\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    secondary: {\n      main: blue[500],\n    },\n    primary: {\n      main: indigo[700],\n    },\n  },\n});\n\nconst DARK_KEY = \"useDarkMode\";\n\nexport default function App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const [dark, setDark] = React.useState<boolean | null>(() => {\n    const value = window.localStorage.getItem(DARK_KEY);\n    return value ? value === \"true\" : null;\n  });\n\n  const changeDarkMode = React.useCallback(\n    (dark: boolean) => {\n      window.localStorage.setItem(DARK_KEY, dark.toString());\n      setDark(dark);\n    },\n    [setDark]\n  );\n\n  const darkMode = dark === null ? prefersDarkMode : dark;\n\n  const theme = React.useMemo(() => createMuiTheme(darkMode ? darkTheme : lightTheme), [darkMode]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header darkMode={darkMode} changeDarkMode={changeDarkMode} />\n      <Container maxWidth=\"lg\">\n        <Router />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport Manifest from \"./Manifest\";\n\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Manifest>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Manifest>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}