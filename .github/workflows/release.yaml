on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  create_release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: yarn
      - run: yarn install --immutable
      - name: Linting sanity check
        run: yarn lint-ci
      - name: Run tests
        run: yarn test-ci
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            # ${{ github.ref }}

            - TODO: CHANGELOG

            ---
            The absolute assets file must be hosted at the root of a domain.
            The relative assets may be hosted at any path (this is usually the one you want).
          draft: true
          prerelease: false

  create_asset:
    name: Build ${{ matrix.name }} path site
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        include:
          - url: "."
            name: relative
          - url: "/"
            name: absolute
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: "14.x"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
          key: ${{ runner.os }}-yarn.cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --immutable
      - run: yarn build
        env:
          PUBLIC_URL: ${{ matrix.url }}
      - name: Zip build assets
        run: |
          zip -r build.zip build
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./build.zip
          asset_name: ${{ matrix.name }}-path-assets.zip
          asset_content_type: application/zip
